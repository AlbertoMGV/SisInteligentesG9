# having a comma separator causes `read.csv` to error
tryCatch(
{
dat <- read.keel(input$file1$datapath)
},
error = function(e) {
# return a safeError if a parsing error occurs
stop(safeError(e))
}
)
if(input$disp == "head") {
return(head(dat))
}
else {
return(dat)
}
})
}
shiny::runApp('SisInteligentesG9/Proyecto3/app')
runApp('SisInteligentesG9/Proyecto3/app')
# =======================================================================
# Names: Alberto Miranda & Danel Lorente
# Group Number:
# Assignment: Sistemas Inteligentes
# Date: 23/04/2019
# =======================================================================
rm(list=ls())
cat("\014")
graphics.off()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
dir()
# LIBRARIES (add any needed library here)
library(RKEEL)
library(caret)
library(ggplot2)
library(lattice)
data = read.keel("../data/baseball.dat")
print(data)
# =======================================================================
# Names: Alberto Miranda & Danel Lorente
# Group Number:
# Assignment: Sistemas Inteligentes
# Date: 23/04/2019
# =======================================================================
rm(list=ls())
cat("\014")
graphics.off()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
dir()
# LIBRARIES (add any needed library here)
library(RKEEL)
library(caret)
library(ggplot2)
library(lattice)
data = read.keel("../data/baseball.dat")
print(data[6])
# =======================================================================
# Names: Alberto Miranda & Danel Lorente
# Group Number:
# Assignment: Sistemas Inteligentes
# Date: 23/04/2019
# =======================================================================
rm(list=ls())
cat("\014")
graphics.off()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
dir()
# LIBRARIES (add any needed library here)
library(RKEEL)
library(caret)
library(ggplot2)
library(lattice)
data = read.keel("../data/baseball.dat")
print(data[7])
# =======================================================================
# Names: Alberto Miranda & Danel Lorente
# Group Number:
# Assignment: Sistemas Inteligentes
# Date: 23/04/2019
# =======================================================================
rm(list=ls())
cat("\014")
graphics.off()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
dir()
# LIBRARIES (add any needed library here)
library(RKEEL)
library(caret)
library(ggplot2)
library(lattice)
data = read.keel("../data/baseball.dat")
print(data)
# =======================================================================
# Names: Alberto Miranda & Danel Lorente
# Group Number:
# Assignment: Sistemas Inteligentes
# Date: 23/04/2019
# =======================================================================
rm(list=ls())
cat("\014")
graphics.off()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
dir()
# LIBRARIES (add any needed library here)
library(RKEEL)
library(caret)
library(ggplot2)
library(lattice)
data = read.keel("../data/baseball.dat")
print(data[17])
install.packages(c("caret", "ggplot2"))
library(caret)
library(ggplot2)
library(lattice)
data = read.keel("../data/baseball.dat")
print(data[17])
runApp()
# =======================================================================
# Names: Alberto Miranda & Danel Lorente
# Group Number:
# Assignment: Sistemas Inteligentes
# Date: 23/04/2019
# =======================================================================
rm(list=ls())
cat("\014")
graphics.off()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
dir()
# LIBRARIES (add any needed library here)
library(RKEEL)
library(caret)
library(ggplot2)
library(lattice)
data = read.keel("../data/baseball.dat")
# Split the data into training and test set
training.samples <- data$target %>% createDataPartition(p = 0.8, list = FALSE)
train.data  <- data[training.samples, ]
test.data <- data[-training.samples, ]
# CREO MODELO LINEAL
linear.model <- lm(target ~., data = train.data)
#PREDICCIONES
predictions <- linear.model %>% predict(test.data)
#ERROR
abs(predictions - test.data$target)
data.frame( R2 = R2(predictions, test.data$target),
RMSE = RMSE(predictions, test.data$target),
MAE = MAE(predictions, test.data$target))
# Define training control
train.control <- trainControl(method = "cv", number = 10)
# Train the model
model <- train(Fertility ~., data = swiss, method = "lm",
trControl = train.control)
# Summarize the results
print(model)
print(data)
# =======================================================================
# Names: Alberto Miranda & Danel Lorente
# Group Number:
# Assignment: Sistemas Inteligentes
# Date: 23/04/2019
# =======================================================================
rm(list=ls())
cat("\014")
graphics.off()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
dir()
# LIBRARIES (add any needed library here)
library(RKEEL)
library(caret)
library(ggplot2)
library(lattice)
data = read.keel("../data/baseball.dat")
# Split the data into training and test set
training.samples <- data$target %>% createDataPartition(p = 0.8, list = FALSE)
train.data  <- data[training.samples, ]
test.data <- data[-training.samples, ]
# CREO MODELO LINEAL
linear.model <- lm(target ~., data = train.data)
#PREDICCIONES
predictions <- linear.model %>% predict(test.data)
#ERROR
abs(predictions - test.data$target)
data.frame( R2 = R2(predictions, test.data$target),
RMSE = RMSE(predictions, test.data$target),
MAE = MAE(predictions, test.data$target))
# Define training control
train.control <- trainControl(method = "cv", number = 10)
# Train the model
model <- train(Fertility ~., data = swiss, method = "lm",
trControl = train.control)
# Summarize the results
print(model)
#print(data)
# =======================================================================
# Names: Alberto Miranda & Danel Lorente
# Group Number:
# Assignment: Sistemas Inteligentes
# Date: 23/04/2019
# =======================================================================
rm(list=ls())
cat("\014")
graphics.off()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
dir()
# LIBRARIES (add any needed library here)
library(RKEEL)
library(caret)
library(ggplot2)
library(lattice)
data = read.keel("../data/baseball.dat")
# Split the data into training and test set
training.samples <- data$target %>% createDataPartition(p = 0.8, list = FALSE)
train.data  <- data[training.samples, ]
test.data <- data[-training.samples, ]
# CREO MODELO LINEAL
linear.model <- lm(target ~., data = train.data)
#PREDICCIONES
predictions <- linear.model %>% predict(test.data)
#ERROR
abs(predictions - test.data$target)
data.frame( R2 = R2(predictions, test.data$target),
RMSE = RMSE(predictions, test.data$target),
MAE = MAE(predictions, test.data$target))
# Define training control
train.control <- trainControl(method = "cv", number = 10)
# Train the model
model <- train(Fertility ~., data = swiss, method = "lm",
trControl = train.control)
# Summarize the results
print(model)
#print(data)
# =======================================================================
# Names: Alberto Miranda & Danel Lorente
# Group Number:
# Assignment: Sistemas Inteligentes
# Date: 23/04/2019
# =======================================================================
rm(list=ls())
cat("\014")
graphics.off()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
dir()
# LIBRARIES (add any needed library here)
library(RKEEL)
library(caret)
library(ggplot2)
library(lattice)
data = read.keel("../data/baseball.dat")
# Split the data into training and test set
training.samples <- createMultiFolds(y=data$target,k = 10, times = 5)
train.data  <- data[training.samples, ]
test.data <- data[-training.samples, ]
# CREO MODELO LINEAL
linear.model <- lm(target ~., data = train.data)
#PREDICCIONES
predictions <- linear.model %>% predict(test.data)
#ERROR
abs(predictions - test.data$target)
data.frame( R2 = R2(predictions, test.data$target),
RMSE = RMSE(predictions, test.data$target),
MAE = MAE(predictions, test.data$target))
# Define training control
train.control <- trainControl(method = "cv", number = 10)
# Train the model
model <- train(Fertility ~., data = swiss, method = "lm",
trControl = train.control)
# Summarize the results
print(model)
#print(data)
# =======================================================================
# Names: Alberto Miranda & Danel Lorente
# Group Number:
# Assignment: Sistemas Inteligentes
# Date: 23/04/2019
# =======================================================================
rm(list=ls())
cat("\014")
graphics.off()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
dir()
# LIBRARIES (add any needed library here)
library(RKEEL)
library(caret)
library(ggplot2)
library(lattice)
data = read.keel("../data/baseball.dat")
# Split the data into training and test set
training.samples <- createMultiFolds(y=data$17,k = 10, times = 5)
train.data  <- data[training.samples, ]
test.data <- data[-training.samples, ]
# CREO MODELO LINEAL
linear.model <- lm(target ~., data = train.data)
#PREDICCIONES
predictions <- linear.model %>% predict(test.data)
#ERROR
abs(predictions - test.data$target)
data.frame( R2 = R2(predictions, test.data$target),
RMSE = RMSE(predictions, test.data$target),
MAE = MAE(predictions, test.data$target))
# Define training control
train.control <- trainControl(method = "cv", number = 10)
# Train the model
model <- train(Fertility ~., data = swiss, method = "lm",
trControl = train.control)
# Summarize the results
print(model)
#print(data)
# =======================================================================
# Names: Alberto Miranda & Danel Lorente
# Group Number:
# Assignment: Sistemas Inteligentes
# Date: 23/04/2019
# =======================================================================
rm(list=ls())
cat("\014")
graphics.off()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
dir()
# LIBRARIES (add any needed library here)
library(RKEEL)
library(caret)
library(ggplot2)
library(lattice)
data = read.keel("../data/baseball.dat")
# Split the data into training and test set
training.samples <- createMultiFolds(y=data$Salary,k = 10, times = 5)
train.data  <- data[training.samples, ]
test.data <- data[-training.samples, ]
# CREO MODELO LINEAL
linear.model <- lm(target ~., data = train.data)
#PREDICCIONES
predictions <- linear.model %>% predict(test.data)
#ERROR
abs(predictions - test.data$target)
data.frame( R2 = R2(predictions, test.data$target),
RMSE = RMSE(predictions, test.data$target),
MAE = MAE(predictions, test.data$target))
# Define training control
train.control <- trainControl(method = "cv", number = 10)
# Train the model
model <- train(Fertility ~., data = swiss, method = "lm",
trControl = train.control)
# Summarize the results
print(model)
#print(data)
# =======================================================================
# Names: Alberto Miranda & Danel Lorente
# Group Number:
# Assignment: Sistemas Inteligentes
# Date: 23/04/2019
# =======================================================================
rm(list=ls())
cat("\014")
graphics.off()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
dir()
# LIBRARIES (add any needed library here)
library(RKEEL)
library(caret)
library(ggplot2)
library(lattice)
data = read.keel("../data/baseball.dat")
# Split the data into training and test set
training.samples <- createMultiFolds(y=data$Salary,k = 10, times = 5)
train.data  <- data[training.samples, ]
test.data <- data[-training.samples, ]
# CREO MODELO LINEAL
linear.model <- lm(target ~., train.data)
#PREDICCIONES
predictions <- linear.model %>% predict(test.data)
#ERROR
abs(predictions - test.data$target)
data.frame( R2 = R2(predictions, test.data$target),
RMSE = RMSE(predictions, test.data$target),
MAE = MAE(predictions, test.data$target))
# Define training control
train.control <- trainControl(method = "cv", number = 10)
# Train the model
model <- train(Fertility ~., data = swiss, method = "lm",
trControl = train.control)
# Summarize the results
print(model)
#print(data)
# =======================================================================
# Names: Alberto Miranda & Danel Lorente
# Group Number:
# Assignment: Sistemas Inteligentes
# Date: 23/04/2019
# =======================================================================
rm(list=ls())
cat("\014")
graphics.off()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
dir()
# LIBRARIES (add any needed library here)
library(RKEEL)
library(caret)
library(ggplot2)
library(lattice)
data = read.keel("../data/baseball.dat")
# Split the data into training and test set
training.samples <- createMultiFolds(y=data$Salary,k = 10, times = 5)
train.data  <- data[training.samples[[i]], ]
test.data <- data[-training.samples[[i]], ]
# CREO MODELO LINEAL
linear.model <- lm(target ~., train.data)
#PREDICCIONES
predictions <- linear.model %>% predict(test.data)
#ERROR
abs(predictions - test.data$target)
data.frame( R2 = R2(predictions, test.data$target),
RMSE = RMSE(predictions, test.data$target),
MAE = MAE(predictions, test.data$target))
# Define training control
train.control <- trainControl(method = "cv", number = 10)
# Train the model
model <- train(Fertility ~., data = swiss, method = "lm",
trControl = train.control)
# Summarize the results
print(model)
#print(data)
# =======================================================================
# Names: Alberto Miranda & Danel Lorente
# Group Number:
# Assignment: Sistemas Inteligentes
# Date: 23/04/2019
# =======================================================================
rm(list=ls())
cat("\014")
graphics.off()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
dir()
# LIBRARIES (add any needed library here)
library(RKEEL)
library(caret)
library(ggplot2)
library(lattice)
data = read.keel("../data/baseball.dat")
# Split the data into training and test set
training.samples <- createMultiFolds(y=data$Salary,k = 10, times = 5)
train.data  <- data[training.samples[[i]], ]
test.data <- data[-training.samples[[i]], ]
# CREO MODELO LINEAL
linear.model <- lm(target ~., train.data)
#PREDICCIONES
predictions <- linear.model %>% predict(test.data)
#ERROR
abs(predictions - test.data$target)
data.frame( R2 = R2(predictions, test.data$target),
RMSE = RMSE(predictions, test.data$target),
MAE = MAE(predictions, test.data$target))
# Define training control
train.control <- trainControl(method = "cv", number = 5)
# Train the model
model <- train(Fertility ~., data, method = "lm",
trControl = train.control)
# Summarize the results
print(model)
#print(data)
# =======================================================================
# Names: Alberto Miranda & Danel Lorente
# Group Number:
# Assignment: Sistemas Inteligentes
# Date: 23/04/2019
# =======================================================================
rm(list=ls())
cat("\014")
graphics.off()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
dir()
# LIBRARIES (add any needed library here)
library(RKEEL)
library(caret)
library(ggplot2)
library(lattice)
data = read.keel("../data/baseball.dat")
# Split the data into training and test set
training.samples <- createMultiFolds(y=data$Salary,k = 10, times = 5)
train.data  <- data[training.samples[[i]], ]
test.data <- data[-training.samples[[i]], ]
# CREO MODELO LINEAL
linear.model <- lm(target ~., train.data)
#PREDICCIONES
predictions <- linear.model %>% predict(test.data)
#ERROR
abs(predictions - test.data$target)
data.frame( R2 = R2(predictions, test.data$target),
RMSE = RMSE(predictions, test.data$target),
MAE = MAE(predictions, test.data$target))
# Define training control
train.control <- trainControl(method = "cv", number = 5)
# Train the model
model <- train(Fertility ~., data, method = "lm",
trControl = train.control)
# Summarize the results
#♣print(model)
print(data)
