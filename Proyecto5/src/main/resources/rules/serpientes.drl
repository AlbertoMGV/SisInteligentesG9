package serpientes

import es.deusto.ingenieria.si.sbc.serpientes.Serpiente
import es.deusto.ingenieria.si.sbc.serpientes.Serpiente.Caracteristica
import es.deusto.ingenieria.si.sbc.serpientes.Serpiente.Colmillos
import es.deusto.ingenieria.si.sbc.serpientes.Serpiente.Color
import es.deusto.ingenieria.si.sbc.serpientes.Serpiente.Escamas
import es.deusto.ingenieria.si.sbc.serpientes.Serpiente.Especie
import es.deusto.ingenieria.si.sbc.serpientes.Serpiente.Forma
import es.deusto.ingenieria.si.sbc.serpientes.Serpiente.Medida
import es.deusto.ingenieria.si.sbc.serpientes.Serpiente.Patron
import es.deusto.ingenieria.si.sbc.serpientes.Serpiente.Tarea

//REGLAS DE INTERPRETACIÃ“N
rule "Medida Small"
	salience 10
	
    when
    	$serpiente : Serpiente (medida == null, longitud < LONG_LIMITE_INF)
    then
    	$serpiente.setMedida(Medida.SMALL);
    	update($serpiente);
end

rule "Medida Mediana"
	salience 10
	
    when
    	$serpiente : Serpiente (medida == null, longitud >= LONG_LIMITE_INF, longitud <= LONG_LIMITE_SUP)    
    then
    	$serpiente.setMedida(Medida.MEDIANA);
    	update($serpiente);
end

rule "Medida Grande"
	salience 10
	
    when
    	$serpiente : Serpiente (medida == null, longitud > LONG_LIMITE_SUP)
    then
    	$serpiente.setMedida(Medida.GRANDE);
    	update($serpiente);
end

rule "Forma Robusta"
	salience 10
	
	when
		$serpiente : Serpiente (forma == null, (longitud/circunferencia) <= RATIO_LONG_CIRCUNFERENCIA)
	then
		$serpiente.setForma(Forma.ROBUSTA);
		update($serpiente);
end

rule "Forma Delgada"
	salience 10
	
	when
		$serpiente : Serpiente (forma == null, (longitud/circunferencia) > RATIO_LONG_CIRCUNFERENCIA)
	then
		$serpiente.setForma(Forma.DELGADA);
		update($serpiente);
end

//REGLAS GENERALES
rule "Tarea Inicio"
	when 
		$serpiente : Serpiente (tarea == Tarea.INICIO)
	then
		$serpiente.setTarea(Tarea.COLMILLOS);
		update($serpiente);
end		

rule "Tarea Colmillos - Frontales y desplegables"
	when
		$serpiente : Serpiente (tarea == Tarea.COLMILLOS,
								colmillos != null, colmillos == Colmillos.FRONTALES_DESPLEGABLES)
	then
		$serpiente.setTarea(Tarea.FOSETAS_LOREALES);
		update($serpiente);
end

rule "Tarea Colmillos - Frontales y fijos"
	when
		$serpiente : Serpiente (tarea == Tarea.COLMILLOS,
								colmillos != null, colmillos == Colmillos.FRONTALES_FIJOS)
	then
		$serpiente.setTarea(Tarea.MEDIDA_Y_FORMA);
		update($serpiente);
end

rule "Tarea Colmillos - Traseros"
	when
		$serpiente : Serpiente (tarea == Tarea.COLMILLOS,
								colmillos != null, colmillos == Colmillos.TRASEROS)
	then
		$serpiente.setTarea(Tarea.MEDIDA_Y_FORMA);
		update($serpiente);
end

rule "Tarea Fosetas Loreales - SI"
	when
		$serpiente : Serpiente (tarea == Tarea.FOSETAS_LOREALES,
		                        fosetasLoreales != null, fosetasLoreales)
	then
		$serpiente.setTarea(Tarea.ESCAMAS);
		update($serpiente);
end

rule "Tarea Fosetas Loreales - NO"
	when
		$serpiente : Serpiente (tarea == Tarea.FOSETAS_LOREALES,
		                        fosetasLoreales != null, fosetasLoreales == false)
	then
		$serpiente.setTarea(Tarea.COLOR_Y_PATRON);
		update($serpiente);
end

rule "Tarea Escamas - Suaves y Colmillos frontales desplegables"
	when
		$serpiente : Serpiente (tarea == Tarea.ESCAMAS,
								colmillos != null, colmillos == Colmillos.FRONTALES_DESPLEGABLES,
		                        escamas != null, escamas == Escamas.SUAVES)
	then
		$serpiente.setEspecie(Especie.SERPIENTE_CABEZA_COBRE);
		System.out.println("- Serpiente: SERPIENTE_CABEZA_COBRE clasificada correctamente.");
		$serpiente.setTarea(Tarea.FIN);
		retract($serpiente);
end

rule "Tarea Escamas - Suaves y Colmillos traseros"
	when
		$serpiente : Serpiente (tarea == Tarea.ESCAMAS,
								colmillos != null, colmillos == Colmillos.TRASEROS,
		                        escamas != null, escamas == Escamas.SUAVES)
	then
		$serpiente.setTarea(Tarea.CARACTERISTICA_PECULIAR);
		update($serpiente);
end

rule "Tarea Escamas - Aquilladas"
	when
		$serpiente : Serpiente (tarea == Tarea.ESCAMAS,
								colmillos != null, colmillos == Colmillos.FRONTALES_DESPLEGABLES,
		                        escamas != null, escamas == Escamas.AQUILLADAS)
	then
		$serpiente.setTarea(Tarea.CARACTERISTICA_PECULIAR);
		update($serpiente);		                        
end

rule "Tarea Caracteristica Peculiar - Escama de cascabel en la cola -> SERPIENTE DE CASCABEL"
	when
		$serpiente : Serpiente (tarea == Tarea.CARACTERISTICA_PECULIAR,
								escamas != null, escamas == Escamas.AQUILLADAS,		
		                        caracteristicas contains Caracteristica.ESCAMAS_COLA_CASCABEL)
	then
		$serpiente.setEspecie(Especie.SERPIENTE_CASCABEL);
		System.out.println("- Serpiente: SERPIENTE_CASCABEL clasificada correctamente.");
		$serpiente.setTarea(Tarea.FIN);
		retract($serpiente);
end

rule "Tarea Caracteristica Peculiar - Ojos redondos grandes -> BOOMSLANG"
	when
		$serpiente : Serpiente (tarea == Tarea.CARACTERISTICA_PECULIAR,		
		                        caracteristicas contains Caracteristica.OJOS_REDONDOS_GRANDES)
	then
		$serpiente.setEspecie(Especie.BOOMSLANG);
		$serpiente.setTarea(Tarea.FIN);
		System.out.println("- Serpiente: BOOMSLANG clasificada correctamente.");
		retract($serpiente);
end

rule "Tarea Color y Patron - Marron claro y Rombos marron oscuro -> VIBORA de GABBON"
	when
		$serpiente : Serpiente (tarea == Tarea.COLOR_Y_PATRON,
								fosetasLoreales != null, !fosetasLoreales,
		                        color != null, color == Color.MARRON_CLARO,
		                        patron != null, patron == Patron.ROMBOS_MARRON_OSCURO)
	then
		$serpiente.setEspecie(Especie.VIBORA_GABBON);
		$serpiente.setTarea(Tarea.FIN);
		System.out.println("- Serpiente: VIBORA_GABBON clasificada correctamente.");
		retract($serpiente);
end

rule "Tarea Color y Patron - Marron claro y Hexagonos palidos -> VIBORA RINOCERONTE"
	when
		$serpiente : Serpiente (tarea == Tarea.COLOR_Y_PATRON,
								fosetasLoreales != null, fosetasLoreales,
		                        color != null, color == Color.MARRON_CLARO,
		                        patron != null, patron == Patron.HEXAGONOS_PALIDOS)
	then
		$serpiente.setEspecie(Especie.VIBORA_RINOCERONTE);
		$serpiente.setTarea(Tarea.FIN);
		System.out.println("- Serpiente: VIBORA_RINOCERONTE clasificada correctamente.");
		retract($serpiente);
end

rule "Tarea Medida y Forma - Mediana y Delgada"	
	when
		$serpiente : Serpiente (tarea == Tarea.MEDIDA_Y_FORMA,
								colmillos == Colmillos.FRONTALES_FIJOS,
		  					    medida == Medida.MEDIANA,		  					   
		  					    forma == Forma.DELGADA)
	then
		$serpiente.setTarea(Tarea.COLOR_Y_PATRON);
		update($serpiente);
end

rule "Tarea Medida y Forma - Mediana y Delgada, colmillos traseros"	
	when
		$serpiente : Serpiente (tarea == Tarea.MEDIDA_Y_FORMA,
								colmillos == Colmillos.TRASEROS,
		  					    medida == Medida.MEDIANA,		  					   
		  					    forma == Forma.DELGADA)
	then
		$serpiente.setTarea(Tarea.ESCAMAS);
		update($serpiente);
end

rule "COLOR_Y_PATRON - Bandas rojas, negras y amarillas -> SERPIENTE CORAL"	
	when
		$serpiente : Serpiente (tarea == Tarea.COLOR_Y_PATRON,
								colmillos == Colmillos.FRONTALES_FIJOS,
								medida != null, medida == Medida.MEDIANA,
								forma != null, forma == Forma.DELGADA,								
								color != null, color == Color.NO_DEFINIDO,
								patron != null, patron == Patron.BANDAS_ROJO_AMARILLO_NEGRO)
	then
		$serpiente.setEspecie(Especie.SERPIENTE_CORAL);
		$serpiente.setTarea(Tarea.FIN);
		System.out.println("- Serpiente: SERPIENTE_CORAL clasificada correctamente.");
		retract($serpiente);
end

rule "COLOR_Y_PATRON - Color marron claro y manchas -> SERPIENTE RATONERA"	
	when
		$serpiente : Serpiente (tarea == Tarea.COLOR_Y_PATRON,
								colmillos == Colmillos.FRONTALES_FIJOS,
								medida != null, medida == Medida.MEDIANA,
								forma != null, forma == Forma.DELGADA,
								color != null, color == Color.MARRON_CLARO,
								patron != null, patron == Patron.MANCHAS)
	then
		$serpiente.setEspecie(Especie.SERPIENTE_RATONERA);
		$serpiente.setTarea(Tarea.FIN);
		System.out.println("- Serpiente: SERPIENTE_RATONERA clasificada correctamente.");
		retract($serpiente);
end